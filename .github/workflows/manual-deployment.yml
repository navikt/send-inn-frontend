name: Manually triggered deployment
run-name: Manual deploy to ${{ inputs.environment }} [${{ github.ref_name }}]
on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment to deploy'
                required: true
                default: 'preprod'
                type: choice
                options:
                    - preprod
                    - preprod-alt
                    - prod
                    - prod-dokumentinnsending
                    - preprod-dokumentinnsending

env:
    IMAGE: ghcr.io/${{ github.repository }}/send-inn-frontend:${{ github.event.inputs.environment }}_${{ github.sha }}
    CI: true
    TZ: Europe/Oslo

jobs:
    build-and-test:
        name: Build and Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'npm'
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@navikt'
            - name: Install dependencies
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Build with mock
              run: npm run build:mock
            - uses: cypress-io/github-action@v5.1.0
              with:
                install: false
                spec: cypress/e2e/*.cy.js
                start: npm run start:with:test
                wait-on: 'http://localhost:3000/sendinn/api/isAlive'
                config: video=false
                config-file: cypress.config.ts
    build-and-push:
        name: Build and push Docker container
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'npm'
                  registry-url: 'https://npm.pkg.github.com'
                  scope: '@navikt'
            - name: Install dependencies
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Set environment variables (prod)
              if: github.event.inputs.environment == 'prod'
              run: cp environments/prod.env .env
            - name: Set environment variables (preprod)
              if: github.event.inputs.environment == 'preprod'
              run: cp environments/preprod.env .env
            - name: Set environment variables (preprod-alt)
              if: github.event.inputs.environment == 'preprod-alt'
              run: cp environments/preprod-alt.env .env
            - name: Set environment variables (prod-dokumentinnsending)
              if: github.event.inputs.environment == 'prod-dokumentinnsending'
              run: cp environments/dokumentinnsending/prod.env .env
            - name: Set environment variables (preprod-dokumentinnsending)
              if: github.event.inputs.environment == 'preprod-dokumentinnsending'
              run: cp environments/dokumentinnsending/preprod.env .env
            - name: Build
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
              run: npm run build
            - name: Publish Docker image
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
                  docker build --tag ${IMAGE} .
                  docker push ${IMAGE}

    deploy-preprod:
        name: Deploy to preprod
        needs: [build-and-test, build-and-push]
        if: github.event.inputs.environment == 'preprod'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  DRY_RUN: false
                  PRINT_PAYLOAD: true
                  CLUSTER: dev-gcp
                  RESOURCE: .nais/nais-preprod.yml
                  VAR: app_version=${{ github.sha }}

    deploy-preprod-alt:
        name: Deploy to preprod-alt
        needs: [build-and-test, build-and-push]
        if: github.event.inputs.environment == 'preprod-alt'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  DRY_RUN: false
                  PRINT_PAYLOAD: true
                  CLUSTER: dev-gcp
                  RESOURCE: .nais/nais-preprod-alt.yml
                  VAR: app_version=${{ github.sha }}

    deploy-prod:
        name: Deploy to prod
        needs: [build-and-test, build-and-push]
        if: github.event.inputs.environment == 'prod'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  DRY_RUN: false
                  PRINT_PAYLOAD: true
                  CLUSTER: prod-gcp
                  RESOURCE: .nais/nais.yml
                  VAR: app_version=${{ github.sha }}

    deploy-preprod-dokumentinnsending:
        name: Deploy to preprod (dokumentinnsending)
        needs: [build-and-test, build-and-push]
        if: github.event.inputs.environment == 'preprod-dokumentinnsending'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  DRY_RUN: false
                  PRINT_PAYLOAD: true
                  CLUSTER: dev-gcp
                  RESOURCE: .nais/dokumentinnsending/nais-preprod.yml
                  VAR: app_version=${{ github.sha }}

    deploy-prod-dokumentinnsending:
        name: Deploy to prod (dokumentinnsending)
        needs: [build-and-test, build-and-push]
        if: github.event.inputs.environment == 'prod-dokumentinnsending'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  DRY_RUN: false
                  PRINT_PAYLOAD: true
                  CLUSTER: prod-gcp
                  RESOURCE: .nais/dokumentinnsending/nais.yml
                  VAR: app_version=${{ github.sha }}
